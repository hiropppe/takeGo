FROM centos:7

MAINTAINER sergei <sergei.0910@gmail.com>

RUN mkdir /root/_INSTALL

WORKDIR /root/_INSTALL

RUN yum -y update
RUN yum -y groupinstall "Development Tools"
RUN yum -y install epel-release
RUN yum -y install\
    which \
    wget \
    git \
    vim \
    mlocate \
    zlib-devel \
    bzip2-devel \
    readline-devel \
    sqlite-devel \
    openssl-devel \
    libpng-devel \
    freetype-devel \
    protobuf-devel \
    leveldb-devel \
    snappy-devel \
    opencv-devel \
    boost-devel \
    hdf5-devel \
    gflags-devel \
    glog-devel \
    lmdb-devel \
    openblas* \
    atlas-devel \
    GConf2 \
    && \
    updatedb

RUN wget https://cmake.org/files/v3.8/cmake-3.8.2.tar.gz \
 && tar xvf cmake-3.8.2.tar.gz \
 && cd cmake-3.8.2 \
 && ./bootstrap \
 && make \
 && make install

RUN git clone https://github.com/OpenMathLib/OpenBLAS \
 && cd OpenBLAS \
 && make \
 && make install

# GnuGo
RUN curl -s http://ftp.gnu.org/gnu/gnugo/gnugo-3.8.tar.gz | tar -xz -C . \
 && cd gnugo-3.8 \
 && ./configure \
 && make \
 && make install

RUN yum -y install java-1.8.0-openjdk-devel

ENV JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk

# update system python
RUN curl -s https://www.python.org/ftp/python/2.7.13/Python-2.7.13.tgz | tar -xz -C . \
 && cd Python-2.7.13/ \
 && ./configure --with-threads --with-ensurepip --enable-optimizations \
 && make \
 && make install

RUN pip --no-cache-dir install \
        numpy==1.11.3 \
        Cython==0.27.0 \
        matplotlib==2.0.2 \
        pandas==0.20.2 \
        h5py==2.6.0 \
        sgf==0.5 \
        six==1.10.0 \
        futures==3.0.5 \
        python-jsonrpc==0.10.0 \
        flask==0.12.2 \
        nose \
        tqdm \
        wheel

# Install Bazel for building tensorflow
RUN wget https://github.com/bazelbuild/bazel/releases/download/0.4.5/bazel-0.4.5-installer-linux-x86_64.sh && \
    chmod +x bazel-0.4.5-installer-linux-x86_64.sh && \
    ./bazel-0.4.5-installer-linux-x86_64.sh --user

# Install Tensorflow from source
RUN git clone https://github.com/tensorflow/tensorflow && \
    cd tensorflow && \
    git checkout v1.3.0

COPY workspace.bzl /root/_INSTALL/tensorflow/tensorflow/

RUN cd tensorflow && \
    export PATH=$PATH:/root/bin && \
    export PYTHON_BIN_PATH=$(which python) && \
    export PYTHON_LIB_PATH="/usr/local/lib/python2.7/site-packages" && \
    export TF_NEED_MKL="1" && \
    export TF_DOWNLOAD_MKL="1" && \
    export CC_OPT_FLAGS="-march=native" && \
    export TF_NEED_JEMALLOC="1" && \
    export TF_NEED_GCP="0" && \
    export TF_NEED_HDFS="0" && \
    export TF_NEED_OPENCL="0" && \
    export TF_NEED_CUDA="0" && \
    export TF_ENABLE_XLA="1" && \
    export TF_NEED_VERBS="0" && \
    export TF_CUDA_CLANG="0" && \
    export GCC_HOST_COMPILER_PATH=$(which gcc) && \
    export TF_NEED_MPI="0" && \
    ./configure && \
    bazel build -c opt --copt=-mavx --copt=-msse4.1 --copt=-msse4.2 //tensorflow/tools/pip_package:build_pip_package && \
    bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg

RUN pip install protobuf==3.6.1
RUN pip install /tmp/tensorflow_pkg/tensorflow-1.3.0-cp27-cp27m-linux_x86_64.whl

RUN rm -f /etc/rpm/macros.image-language-conf && \
    sed -i '/^override_install_langs=/d' /etc/yum.conf && \
    yum -y reinstall glibc-common && \
    yum clean all

ENV LANG="ja_JP.UTF-8" \
    LANGUAGE="ja_JP:ja" \
    LC_ALL="ja_JP.UTF-8"

RUN mkdir -p /root/.keras
COPY keras-NHWC.json /root/.keras/keras.json

WORKDIR /root

COPY gogui-1.4.9.zip .
RUN unzip gogui-1.4.9.zip \
 && cd gogui-1.4.9 \
 && ./install.sh

# vs GnuGo
# gogui-twogtp -black "python /root/bambooStone/bbc" -white "gnugo --mode gtp --chinese-rules --level 10" -games 1 -size 19 -komi 7.5 -time 15 -alternate -sgffile take.vs.gnugo -auto -force
# vs Pachi
# gogui-twogtp -black "python /root/bambooStone/bbc" -white "pachi -t _900 threads=1,max_tree_size=3072" -games 1 -size 19 -komi 7.5 -time 15 -alternate -sgffile take.vs.pachi -auto -force
