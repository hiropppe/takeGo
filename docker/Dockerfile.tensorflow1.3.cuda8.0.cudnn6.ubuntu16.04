FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04

MAINTAINER sergei <sergei.0910@gmail.com>

WORKDIR /root

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        software-properties-common \
        build-essential \
        curl \
        wget \
        vim \
        git \
        net-tools \
        iputils-ping \
        netcat \
        tcpdump \
        libfreetype6-dev \
        libpng12-dev \
        libzmq3-dev \
        pkg-config \
        python \
        python-dev \
        python-numpy \
        python-wheel \
        python-mock \
        rsync \
        zip \
        unzip \
        g++ \
        gfortran \
        mlocate \
        libcupti-dev \
        && \
        apt-get clean && \
        rm -rf /var/lib/apt/lists/* && \
        updatedb

RUN wget https://www.open-mpi.org/software/ompi/v3.0/downloads/openmpi-3.0.0.tar.gz --no-check-certificate \
 && tar xzf openmpi-3.0.0.tar.gz \
 && cd openmpi-3.0.0 \
 && ./configure --prefix=/opt/OpenMPI CC=gcc CXX=g++ F77=gfortran FC=gfortran \
 && make \
 && make install

RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
    python get-pip.py && \
    rm get-pip.py

RUN pip --no-cache-dir install \
        ipykernel \
        jupyter \
        numpy==1.11.3 \
        Cython==0.24 \
        matplotlib==2.0.2 \
        pandas==0.20.2 \
        h5py==2.6.0 \
        sgf==0.5 \
        six==1.10.0 \
        futures==3.0.5 \
        python-jsonrpc==0.10.0 \
        flask==0.12.2 \
        nose \
        tqdm \
        jedi \
        flake8 \
        autopep8 \
        && \
    python -m ipykernel.kernelspec

# Install Java8
#RUN add-apt-repository ppa:webupd8team/java && \
#    echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections && \
#    apt-get update && apt-get install -y oracle-java8-installer

# Install OpenJDK 8
RUN apt-get update \
 && apt-get install -y openjdk-8-jdk

# Install Bazel for building tensorflow
RUN wget https://github.com/bazelbuild/bazel/releases/download/0.4.5/bazel-0.4.5-installer-linux-x86_64.sh && \
    chmod +x bazel-0.4.5-installer-linux-x86_64.sh && \
    ./bazel-0.4.5-installer-linux-x86_64.sh --user

# Copy cuDNN
COPY cudnn/cudnn-8.0-linux-x64-v6.0.solitairetheme8 /tmp/

RUN tar xzf /tmp/cudnn-8.0-linux-x64-v6.0.solitairetheme8 && \
    cp -a cuda/include/* /usr/local/cuda/include/ && \
    cp -a cuda/lib64/* /usr/local/cuda/lib64/

# Install Tensorflow from source
RUN git clone https://github.com/tensorflow/tensorflow && \
    cd tensorflow && \
    git checkout v1.3.0

COPY workspace.bzl /root/tensorflow/tensorflow/

RUN cd tensorflow && \
    export PATH=$PATH:/root/bin && \
    export PYTHON_BIN_PATH=$(which python) && \
    export PYTHON_LIB_PATH="/usr/lib/python2.7/dist-packages" && \
    export TF_NEED_MKL="1" && \
    export TF_DOWNLOAD_MKL="1" && \
    export CC_OPT_FLAGS="-march=native" && \
    export TF_NEED_JEMALLOC="1" && \
    export TF_NEED_GCP="0" && \
    export TF_NEED_HDFS="0" && \
    export TF_NEED_OPENCL="0" && \
    export TF_NEED_CUDA="1" && \
    export TF_ENABLE_XLA="1" && \
    export TF_NEED_VERBS="0" && \
    export TF_CUDA_CLANG="0" && \
    export TF_CUDA_VERSION="8.0" && \
    export CUDA_TOOLKIT_PATH="/usr/local/cuda" && \
    export TF_CUDNN_VERSION="6" && \
    export CUDNN_INSTALL_PATH="/usr/local/cuda" && \
    export TF_CUDA_COMPUTE_CAPABILITIES="6.1" && \
    export GCC_HOST_COMPILER_PATH=$(which gcc) && \
    export TF_NEED_MPI="1" && \
    export MPI_HOME="/opt/OpenMPI/" && \
    ./configure && \
    bazel build -c opt --copt=-mavx --copt=-mavx2 --copt=-msse4.1 --copt=-msse4.2 --copt=-mfma --config=cuda //tensorflow/tools/pip_package:build_pip_package && \
    bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg

RUN pip install /tmp/tensorflow_pkg/tensorflow-1.3.0-cp27-cp27mu-linux_x86_64.whl

ENV PATH /opt/OpenMPI/bin:$PATH
ENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/opt/OpenMPI/lib:$LD_LIBRARY_PATH

RUN echo '# OpenMPI' >> ~/.bash_profile \
 && echo 'export PATH=/opt/OpenMPI/bin:$PATH' >> ~/.bash_profile \
 && echo 'export LD_LIBRARY_PATH=/opt/OpenMPI/lib:$LD_LIBRARY_PATH' >> ~/.bash_profile \
 && echo '' >> ~/.bash_profile \
 && echo '# CUPTI' >> ~/.bash_profile \
 && echo 'export LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH' >> ~/.bash_profile \
 && echo '' >> ~/.bash_profile

RUN mkdir -p keras-NCHW.json /root/.keras/keras.json
